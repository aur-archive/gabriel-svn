Index: src/gabriel-client.c
===================================================================
--- src/gabriel-client.c	(revision 38)
+++ src/gabriel-client.c	(working copy)
@@ -124,7 +124,7 @@
             FD_ZERO (&fds);
             if (!eof)
                 FD_SET (client->sock, &fds);
-            /* We need a timeout for the unfortunate case of getting SIGINT 
+            /* We need a timeout for the unfortunate case of getting SIGINT
              * before select gets called, in which case it would happily block
              * forever if there is no timeout provided to it.
              */
@@ -152,7 +152,7 @@
 
         if (outchannel[0]) {
             while (channel_poll (outchannel[0], 0)) {
-                lus = channel_read (outchannel[0], readbuf, 0, 0);
+                lus = channel_read_buffer (outchannel[0], readbuf, 0, 0);
 
                 if (lus == -1) {
                     g_critical ("%s\n",
Index: src/gabriel.c
===================================================================
--- src/gabriel.c	(revision 38)
+++ src/gabriel.c	(working copy)
@@ -336,8 +336,12 @@
     gint ret;
 
     gabriel->bus_address = bus_address;
-    gabriel_parse_bus_address (gabriel);
 
+    if (gabriel_parse_bus_address (gabriel) == FALSE) {
+        g_critical ("Remote DBus bus address not valid!\n");
+        goto finland;
+    }
+
     ssh_options = ssh_options_new ();
     ssh_options_set_host (ssh_options, host);
     ssh_options_set_username (ssh_options, username);
@@ -358,7 +362,7 @@
         goto finland;
     }
 
-    ret = ssh_userauth_autopubkey (gabriel->ssh_session);
+    ret = ssh_userauth_autopubkey (gabriel->ssh_session, NULL);
 
     if (ret != SSH_AUTH_SUCCESS) {
         if (ret == SSH_AUTH_DENIED) {
Index: src/gabriel.h
===================================================================
--- src/gabriel.h	(revision 38)
+++ src/gabriel.h	(working copy)
@@ -27,6 +27,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <sys/socket.h>
 #include <sys/un.h>
 #include <glib.h>
